#include <stdio.h>
#include "pico/stdlib.h"
#include "hardware/clocks.h"
#include "hardware/pll.h"
#include "hardware/structs/clocks.h"

// Function to measure and print clock frequencies
void print_clock_frequencies() {
    printf("pll_sys: %u Hz\n", clock_get_hz(clk_sys));
    printf("pll_usb: %u Hz\n", clock_get_hz(clk_usb));
    printf("ROSC: %u Hz\n", clock_get_hz(clk_rosc));
    printf("clk_sys: %u Hz\n", clock_get_hz(clk_sys));
    printf("clk_peri: %u Hz\n", clock_get_hz(clk_peri));
    printf("clk_usb: %u Hz\n", clock_get_hz(clk_usb));
    printf("clk_adc: %u Hz\n", clock_get_hz(clk_adc));
}

// Function to switch system clock based on user input
void switch_system_clock(int mode) {
    switch (mode) {
        case 0:
            printf("Switching to clk_ref...\n");
            clock_configure(clk_sys, CLOCKS_CLK_SYS_CTRL_SRC_VALUE_CLK_REF, 0, 12000000, 12000000);
            break;
        case 1:
            printf("Setting PLL_SYS to 48 MHz...\n");
            pll_init(pll_sys, 1, 48 * MHZ, 1, 6); // Example PLL settings
            clock_configure(clk_sys, CLOCKS_CLK_SYS_CTRL_SRC_VALUE_CLKSRC_PLL_SYS, 0, 48 * MHZ, 48 * MHZ);
            break;
        case 2:
            printf("Setting PLL_SYS to 96 MHz...\n");
            pll_init(pll_sys, 1, 96 * MHZ, 1, 6);
            clock_configure(clk_sys, CLOCKS_CLK_SYS_CTRL_SRC_VALUE_CLKSRC_PLL_SYS, 0, 96 * MHZ, 96 * MHZ);
            break;
        case 3:
            printf("Setting PLL_SYS to 133 MHz...\n");
            pll_init(pll_sys, 1, 133 * MHZ, 1, 6);
            clock_configure(clk_sys, CLOCKS_CLK_SYS_CTRL_SRC_VALUE_CLKSRC_PLL_SYS, 0, 133 * MHZ, 133 * MHZ);
            break;
        default:
            printf("Invalid input. Enter a number between 0-3.\n");
            return;
    }

    // Print new frequencies
    print_clock_frequencies();
}

int main() {
    stdio_init_all();
    sleep_ms(2000);  // Allow time for serial connection

    printf("Initial Clock Frequencies:\n");
    print_clock_frequencies();

    // Configure clk_ref and clk_peri to external 12 MHz
    printf("Configuring clk_ref and clk_peri to 12 MHz source...\n");
    clock_configure(clk_ref, CLOCKS_CLK_REF_CTRL_SRC_VALUE_XOSC, 0, 12000000, 12000000);
    clock_configure(clk_peri, CLOCKS_CLK_PERI_CTRL_SRC_VALUE_CLK_SYS, 0, 12000000, 12000000);
    
    stdio_init_all();  // Reinitialize peripherals

    while (1) {
        int mode;
        printf("\nEnter a mode (0-3): ");
        if (scanf("%d", &mode) == 1) {
            switch_system_clock(mode);
        } else {
            printf("Invalid input.\n");
            sleep_ms(500);
        }
    }

    return 0;
}